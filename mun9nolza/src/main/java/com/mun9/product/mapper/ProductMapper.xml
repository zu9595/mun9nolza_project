<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.mun9.product.mapper.ProductMapper">
  
  <select id="getProduct" resultType="product" parameterType="int">
  	select * from product where pro_code = #{pcode}
  </select>
  
  <select id="getProductName" resultType="product" parameterType="String">
  	select pro_code from product where pro_name = #{pname}
  </select>

  <select id="selectProductList" resultType="product">
    select * from product order by 1
 </select>
 <select id="mainBestProductList" resultType="product">
    select * from product order by pro_sell desc
 </select>
 <select id="mainCategoryHotList" resultType="product">
 	select * from (select 
                    pro_code
                    ,pro_name
                    ,pro_image
                    ,category 
                    ,ROW_NUMBER() OVER (PARTITION BY category ORDER BY pro_sell desc) as rn
	from product)
	where rn = 1
 </select>
 <select id="saleList" resultType="product">
    select * from product order by pro_discount
 </select>
 
  <select id="getProductDetail" resultType="product" parameterType="int">
  	select * from product where pro_code = #{pcode}
  </select>
   
 <select id="productListPaging" resultType="product" parameterType="product">
	select b.* from
	(select rownum rn, a.* from
	(select * from product
	<where>
	<if test="category != null and category != ''">
		category = #{category}
	</if>
	<if test="search != null and search != ''">
		INSTR(pro_name, #{search}) > 0 
	</if>
    </where>
    <choose>
	<when test="proName != null">
		order by pro_name
	</when>
	<when test="proPrice != null and proPrice != 0">
		order by pro_discount
	</when>
	<when test="proSell != null and proSell != 0">
		order by pro_sell
	</when>
	<otherwise>
		order by pro_price
	</otherwise>
	</choose>
	) a ) b
	<![CDATA[
	where b.rn > (#{page}-1)*9 and b.rn <= #{page}*9
    ]]>
    
 </select>
 <select id="selectCount" resultType="int">
	select count(*) from product 
	<where>
    <if test="category != null and category != ''">
    category = #{category}
    </if>
    </where> 
	order by 1
 </select>
 
 <delete id="deleteProduct" parameterType="int">
 	delete from product where pro_code=#{proCode}
 </delete>
 
 <update id="modifyProduct" parameterType="product">
 	update product
	set pro_name= #{proName},pro_desc= #{proDesc},pro_image= #{proImage},pro_price= #{proPrice},pro_discount= #{proDiscount},pro_sell= #{proSell},pro_stock= #{proStock},category= #{category}
	where pro_code= #{proCode}
 </update>
 
 <insert id="insertProduct" parameterType="product">
 	insert into product(pro_code,pro_name,pro_desc,pro_image,pro_price,pro_discount,pro_sell,pro_stock,category)
	values (mypro_no_seq.NEXTVAL,#{proName},#{proDesc},#{proImage},#{proPrice},#{proDiscount},#{proSell},#{proStock},#{category})
 </insert>
 
 <select id="searchProduct" resultType="String">
		select pro_name, pro_code, pro_image, pro_price, pro_discount
		from product
		where 
		<![CDATA[
			(pro_name like #{search} or category like #{search}) and rownum <=10 order by pro_sell desc			
		]]>
  </select>
	
</mapper>